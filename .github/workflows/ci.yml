name: Planora CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      MONGODB_URI: mongodb://localhost:27017/planora_test
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NODE_ENV: test
      VITE_API_URL: http://localhost:5000

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install npm 9
        run: npm install -g npm@9

      # Setup environment files
      - name: Setup Backend Environment
        run: |
          echo "MONGODB_URI=mongodb://localhost:27017/planora_test" > BEplanora/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> BEplanora/.env
          echo "NODE_ENV=test" >> BEplanora/.env
          echo "PORT=5000" >> BEplanora/.env
          
      # Backend - Install and Build
      - name: Install Backend Dependencies
        working-directory: ./BEplanora
        run: |
          echo "Installing backend dependencies..."
          npm ci
          echo "Backend dependencies installed"

      # Frontend - Clean Install to Fix Rollup Issue
      - name: Clean and Install Frontend Dependencies
        working-directory: ./FEplanora
        run: |
          echo "Cleaning frontend dependencies..."
          rm -rf node_modules package-lock.json
          echo "Installing frontend dependencies..."
          npm install
          npm rebuild
          echo "Frontend dependencies installed"

      # Build Frontend
      - name: Build Frontend
        working-directory: ./FEplanora
        run: |
          echo "Building frontend..."
          npm run build
        env:
          VITE_API_URL: http://localhost:5000
          ROLLUP_SKIP_LOAD_NATIVE_MODULES: 'true'

      # Run Backend Tests
      - name: Run Backend Tests
        working-directory: ./BEplanora
        run: |
          echo "Running backend tests..."
          npm test
        env:
          MONGODB_URI: mongodb://localhost:27017/planora_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      # Run Frontend Tests
      - name: Run Frontend Tests
        working-directory: ./FEplanora
        run: |
          echo "Running frontend tests..."
          npm test
        env:
          CI: true
          ROLLUP_SKIP_LOAD_NATIVE_MODULES: 'true'

      # Linting
      - name: Run Frontend Linting
        working-directory: ./FEplanora
        run: |
          echo "Running frontend linting..."
          npm run lint
        continue-on-error: true
        
      - name: Run Backend Linting
        working-directory: ./BEplanora
        run: |
          echo "Running backend linting..."
          npm run lint || echo "Backend linting not configured"
        continue-on-error: true

      # E2E Tests Setup
      - name: Setup Chrome for E2E Tests
        uses: browser-actions/setup-chrome@latest
        
      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@master
        
      # Start Servers for E2E Testing
      - name: Start Backend Server for E2E
        working-directory: ./BEplanora
        run: |
          echo "Starting backend server..."
          npm start &
          sleep 10
        env:
          MONGODB_URI: mongodb://localhost:27017/planora_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: 5000

      - name: Start Frontend Server for E2E
        working-directory: ./FEplanora
        run: |
          echo "Starting frontend server..."
          npm run dev &
          sleep 15
        env:
          VITE_API_URL: http://localhost:5000

      # Run E2E/Automation Tests
      - name: Run E2E Tests
        working-directory: ./FEplanora
        run: |
          echo "Running E2E tests..."
          npm run test:e2e || echo "E2E tests not configured"
        continue-on-error: true
        env:
          CI: true
          TEST_BASE_URL: http://localhost:5173

      # Cleanup
      - name: Cleanup Processes
        if: always()
        run: |
          echo "Cleaning up processes..."
          pkill -f "node" || true
          pkill -f "vite" || true
          echo "Cleanup completed"