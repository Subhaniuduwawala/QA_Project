name: Planora CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      # Backend (BEplanora)
      - name: Install backend dependencies
        run: |
          cd BEplanora
          npm install
          
      - name: Start backend server
        run: |
          cd BEplanora
          node app.js &
          sleep 10
        env:
          MONGODB_URI: mongodb://localhost:27017/planora
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        
      # Frontend (FEplanora)
      - name: Install frontend dependencies
        run: |
          cd FEplanora
          npm install
        
      - name: Build frontend
        run: |
          cd FEplanora
          npm run build
        
      # Setup Chrome for Selenium tests
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
        
      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@master
        
      - name: Start frontend dev server
        run: |
          cd FEplanora
          npm run dev &
          sleep 10
        env:
          VITE_API_URL: http://localhost:5000
        
      - name: Run frontend tests
        run: |
          cd FEplanora
          npm test
        env:
          CI: true
          
      - name: Run backend tests
        run: |
          cd BEplanora
          npm test
        env:
          MONGODB_URI: mongodb://localhost:27017/planora_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          
      # Linting
      - name: Frontend lint
        run: |
          cd FEplanora
          npm run lint
        continue-on-error: true
        
      # Kill background processes
      - name: Cleanup
        if: always()
        run: |
          pkill -f "node" || true